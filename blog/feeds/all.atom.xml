<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017Fall CADP&amp;CP (虎尾科大MDE)</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/" rel="alternate"></link><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/feeds/all.atom.xml" rel="self"></link><id>https://cpb.kmol.info/40623201/doc/trunk/blog/</id><updated>2017-11-06T01:00:00+08:00</updated><entry><title>計算機程式第九週期中心得</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/40623201-w9.html" rel="alternate"></link><published>2017-11-06T01:00:00+08:00</published><updated>2017-11-06T01:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-11-06:/40623201/doc/trunk/blog/40623201-w9.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;操作影片&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/241456122" width="600" height="500" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/241456122"&gt;Untitled&lt;/a&gt; from &lt;a href="https://vimeo.com/user73464997"&gt;王君庭&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;學習心得&lt;/h3&gt;
&lt;p&gt;W1-W9心得&lt;/p&gt;
&lt;p&gt;剛開始學fossil時,只聽到老師一直fossil clone跟fossil .....的完全不懂是什麼意思, 但經過老師錄製的教學影片及同學們的幫助,終於弄懂每個動作後面所指的涵義,只要將教學影片多看幾次就能了解老師所教的東西了 ,也學到了很有趣的迴圈用法,並將她用函式減少更改變數的次數,也學到一些calculator介面創建及排版,這幾堂課學習到了很多&lt;/p&gt;
&lt;h3&gt;自評分數:60&lt;/h3&gt;</content><category term="2017fall"></category><category term="CP"></category><category term="w9"></category></entry><entry><title>計算機程式第八週學習心得</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/40623201-w8.html" rel="alternate"></link><published>2017-11-03T01:00:00+08:00</published><updated>2017-11-03T01:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-11-03:/40623201/doc/trunk/blog/40623201-w8.html</id><summary type="html">&lt;p&gt;for 迴圈用法與 Python 的縮排規定及Eric6&lt;/p&gt;
</summary><content type="html">&lt;p&gt;for 迴圈用法與 Python 的縮排規定及Eric6&lt;/p&gt;


&lt;h3&gt;操作影片&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/241028153" width="600" height="500" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/241028153"&gt;-機械設計工程系-計算機程式-40623201&lt;/a&gt; from &lt;a href="https://vimeo.com/user73464997"&gt;王君庭&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/241027693" width="600" height="500" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/241027693"&gt;虎尾科技大學-機械設計工程系-計算機程式-40623201&lt;/a&gt; from &lt;a href="https://vimeo.com/user73464997"&gt;王君庭&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;學習心得&lt;/h3&gt;
&lt;p&gt;本周學到了迴圈的語法及如何運用迴圈做出排列,從一開始簡單的迴圈的語法 for i in range(10): 變成了不用一一改變變數 只要先 def diamond(w): 假設變數為w 只要更改下面 diamond( )括號內的數字,就能改變變數,還有後面self的運用以及init初始就要先定義的運用&lt;/p&gt;
&lt;h3&gt;自評成績&lt;/h3&gt;
&lt;p&gt;自評分數:65&lt;/p&gt;</content><category term="2017fall"></category><category term="CP"></category><category term="w8"></category></entry><entry><title>計算機程式第七週學習心得</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/40623201-w7-exam.html" rel="alternate"></link><published>2017-10-29T11:00:00+08:00</published><updated>2017-10-29T11:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-10-29:/40623201/doc/trunk/blog/40623201-w7-exam.html</id><summary type="html">&lt;p&gt;w7-exam&lt;/p&gt;
</summary><content type="html">&lt;p&gt;w7-exam&lt;/p&gt;


&lt;h3&gt;操作影片&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/240370036" width="600" height="500" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/240370036"&gt;-機械設計工程系-40623201&lt;/a&gt; from &lt;a href="https://vimeo.com/user73464997"&gt;王君庭&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;學習心得&lt;/h3&gt;
&lt;p&gt;從第一週接觸計算機程式到現在發現到每個程式背後都有如此複雜的操作過程,一開始在看老師操作心中只有滿滿的問號,感覺整堂課只聽到fossil跟fossil clone,但經過幾次上課及同學們的幫助後,漸漸對老師上的東西有些概念了,不過這週的考試還是有些措手不及,有點茫然不知道要做什麼&lt;/p&gt;
&lt;h3&gt;自評成績&lt;/h3&gt;
&lt;p&gt;每週出席情況:100&lt;/p&gt;
&lt;p&gt;紙本筆記:70&lt;/p&gt;
&lt;p&gt;隨身碟內容:70&lt;/p&gt;
&lt;p&gt;個人倉儲內容:65&lt;/p&gt;
&lt;p&gt;各週上課摘要:65&lt;/p&gt;
&lt;p&gt;自評分數:65&lt;/p&gt;</content><category term="2017fall"></category><category term="CP"></category><category term="w7"></category><category term="exam"></category></entry><entry><title>計算機程式第六週學習心得</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/40623201-w6.html" rel="alternate"></link><published>2017-10-16T01:00:00+08:00</published><updated>2017-10-16T01:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-10-16:/40623201/doc/trunk/blog/40623201-w6.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;課堂筆記&lt;/h3&gt;
&lt;p&gt;先mkdir  github(建立一個 github)&lt;/p&gt;
&lt;p&gt;再git clone https://github.com/kmolab/rpcal.git&lt;/p&gt;
&lt;p&gt;clone完後開啟eric6&amp;gt;Project&amp;gt;Open&amp;gt;clone的github資料夾&amp;gt;pyqt5_calculator&amp;gt;calculator.e4p&lt;/p&gt;
&lt;p&gt;開啟後可以在Start&amp;gt;Run project...執行&amp;gt;按OK就能執行&lt;/p&gt;
&lt;p&gt;再開另一個eric6&amp;gt;Project&amp;gt;New&amp;gt;填寫Project Name填寫名稱&amp;gt;Project Directory選擇存放位置&amp;gt;OK&lt;/p&gt;
&lt;h3&gt;學習心得&lt;/h3&gt;
&lt;p&gt;本周將之前學的如何建立倉儲,網誌和更改Auhor以及更改版本在重上一次,經過前幾次的操作後,這次能將之前不了解的部分多加理解,加深印象,本周也學到如何運用eric6去創建calculator的介面&lt;/p&gt;</content><category term="2017fall"></category><category term="CP"></category><category term="w6"></category></entry><entry><title>計算機程式第五週(放假)</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/2017-fall-cp-w5.html" rel="alternate"></link><published>2017-10-09T11:00:00+08:00</published><updated>2017-10-09T11:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-10-09:/40623201/doc/trunk/blog/2017-fall-cp-w5.html</id><summary type="html">&lt;p&gt;W5 PyQt5&lt;/p&gt;
</summary><content type="html">&lt;p&gt;W5 PyQt5&lt;/p&gt;


&lt;pre class="brush: python"&gt;
#!/usr/bin/env python

import math

from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (QApplication, QGridLayout, QLayout, QLineEdit,
        QSizePolicy, QToolButton, QWidget)


class Button(QToolButton):
    '''
    def __init__(self, text, parent=None):
        super(Button, self).__init__(parent)
    '''
    # for Python 3
    def __init__(self, text):
        super().__init__()

        self.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        self.setText(text)

    def sizeHint(self):
        size = super(Button, self).sizeHint()
        size.setHeight(size.height() + 20)
        size.setWidth(max(size.width(), size.height()))
        return size


class Calculator(QWidget):
    NumDigitButtons = 10

    '''    
    def __init__(self, parent=None):
        super(Calculator, self).__init__(parent)
    '''
    def __init__(self):
        super().__init__()

        self.pendingAdditiveOperator = ''
        self.pendingMultiplicativeOperator = ''

        self.sumInMemory = 0.0
        self.sumSoFar = 0.0
        self.factorSoFar = 0.0
        self.waitingForOperand = True

        self.display = QLineEdit('0')
        self.display.setReadOnly(True)
        self.display.setAlignment(Qt.AlignRight)
        self.display.setMaxLength(15)

        font = self.display.font()
        font.setPointSize(font.pointSize() + 8)
        self.display.setFont(font)

        self.digitButtons = []

        for i in range(Calculator.NumDigitButtons):
            self.digitButtons.append(self.createButton(str(i),
                    self.digitClicked))

        self.pointButton = self.createButton(".", self.pointClicked)
        self.changeSignButton = self.createButton(u"\N{PLUS-MINUS SIGN}",
                self.changeSignClicked)

        self.backspaceButton = self.createButton("Backspace",
                self.backspaceClicked)
        self.clearButton = self.createButton("Clear", self.clear)
        self.clearAllButton = self.createButton("Clear All", self.clearAll)

        self.clearMemoryButton = self.createButton("MC", self.clearMemory)
        self.readMemoryButton = self.createButton("MR", self.readMemory)
        self.setMemoryButton = self.createButton("MS", self.setMemory)
        self.addToMemoryButton = self.createButton("M+", self.addToMemory)

        self.divisionButton = self.createButton(u"\N{DIVISION SIGN}",
                self.multiplicativeOperatorClicked)
        self.timesButton = self.createButton(u"\N{MULTIPLICATION SIGN}",
                self.multiplicativeOperatorClicked)
        self.minusButton = self.createButton("-", self.additiveOperatorClicked)
        self.plusButton = self.createButton("+", self.additiveOperatorClicked)

        self.squareRootButton = self.createButton("Sqrt",
                self.unaryOperatorClicked)
        self.powerButton = self.createButton(u"x\N{SUPERSCRIPT TWO}",
                self.unaryOperatorClicked)
        self.reciprocalButton = self.createButton("1/x",
                self.unaryOperatorClicked)
        self.equalButton = self.createButton("=", self.equalClicked)

        mainLayout = QGridLayout()
        mainLayout.setSizeConstraint(QLayout.SetFixedSize)

        mainLayout.addWidget(self.display, 0, 0, 1, 6)
        mainLayout.addWidget(self.backspaceButton, 1, 0, 1, 2)
        mainLayout.addWidget(self.clearButton, 1, 2, 1, 2)
        mainLayout.addWidget(self.clearAllButton, 1, 4, 1, 2)

        mainLayout.addWidget(self.clearMemoryButton, 2, 0)
        mainLayout.addWidget(self.readMemoryButton, 3, 0)
        mainLayout.addWidget(self.setMemoryButton, 4, 0)
        mainLayout.addWidget(self.addToMemoryButton, 5, 0)

        for i in range(1, Calculator.NumDigitButtons):
            row = ((9 - i) / 3) + 2
            column = ((i - 1) % 3) + 1
            mainLayout.addWidget(self.digitButtons[i], row, column)

        mainLayout.addWidget(self.digitButtons[0], 5, 1)
        mainLayout.addWidget(self.pointButton, 5, 2)
        mainLayout.addWidget(self.changeSignButton, 5, 3)

        mainLayout.addWidget(self.divisionButton, 2, 4)
        mainLayout.addWidget(self.timesButton, 3, 4)
        mainLayout.addWidget(self.minusButton, 4, 4)
        mainLayout.addWidget(self.plusButton, 5, 4)

        mainLayout.addWidget(self.squareRootButton, 2, 5)
        mainLayout.addWidget(self.powerButton, 3, 5)
        mainLayout.addWidget(self.reciprocalButton, 4, 5)
        mainLayout.addWidget(self.equalButton, 5, 5)
        self.setLayout(mainLayout)

        self.setWindowTitle("Calculator")

    def digitClicked(self):
        clickedButton = self.sender()
        digitValue = int(clickedButton.text())

        if self.display.text() == '0' and digitValue == 0.0:
            return

        if self.waitingForOperand:
            self.display.clear()
            self.waitingForOperand = False

        self.display.setText(self.display.text() + str(digitValue))

    def unaryOperatorClicked(self):
        clickedButton = self.sender()
        clickedOperator = clickedButton.text()
        operand = float(self.display.text())

        if clickedOperator == "Sqrt":
            if operand &lt; 0.0:
                self.abortOperation()
                return

            result = math.sqrt(operand)
        elif clickedOperator == u"x\N{SUPERSCRIPT TWO}":
            result = math.pow(operand, 2.0)
        elif clickedOperator == "1/x":
            if operand == 0.0:
                self.abortOperation()
                return

            result = 1.0 / operand

        self.display.setText(str(result))
        self.waitingForOperand = True

    def additiveOperatorClicked(self):
        clickedButton = self.sender()
        clickedOperator = clickedButton.text()
        operand = float(self.display.text())

        if self.pendingMultiplicativeOperator:
            if not self.calculate(operand, self.pendingMultiplicativeOperator):
                self.abortOperation()
                return

            self.display.setText(str(self.factorSoFar))
            operand = self.factorSoFar
            self.factorSoFar = 0.0
            self.pendingMultiplicativeOperator = ''

        if self.pendingAdditiveOperator:
            if not self.calculate(operand, self.pendingAdditiveOperator):
                self.abortOperation()
                return

            self.display.setText(str(self.sumSoFar))
        else:
            self.sumSoFar = operand

        self.pendingAdditiveOperator = clickedOperator
        self.waitingForOperand = True

    def multiplicativeOperatorClicked(self):
        clickedButton = self.sender()
        clickedOperator = clickedButton.text()
        operand = float(self.display.text())

        if self.pendingMultiplicativeOperator:
            if not self.calculate(operand, self.pendingMultiplicativeOperator):
                self.abortOperation()
                return

            self.display.setText(str(self.factorSoFar))
        else:
            self.factorSoFar = operand

        self.pendingMultiplicativeOperator = clickedOperator
        self.waitingForOperand = True

    def equalClicked(self):
        operand = float(self.display.text())

        if self.pendingMultiplicativeOperator:
            if not self.calculate(operand, self.pendingMultiplicativeOperator):
                self.abortOperation()
                return

            operand = self.factorSoFar
            self.factorSoFar = 0.0
            self.pendingMultiplicativeOperator = ''

        if self.pendingAdditiveOperator:
            if not self.calculate(operand, self.pendingAdditiveOperator):
                self.abortOperation()
                return

            self.pendingAdditiveOperator = ''
        else:
            self.sumSoFar = operand

        self.display.setText(str(self.sumSoFar))
        self.sumSoFar = 0.0
        self.waitingForOperand = True

    def pointClicked(self):
        if self.waitingForOperand:
            self.display.setText('0')

        if "." not in self.display.text():
            self.display.setText(self.display.text() + ".")

        self.waitingForOperand = False

    def changeSignClicked(self):
        text = self.display.text()
        value = float(text)

        if value &gt; 0.0:
            text = "-" + text
        elif value &lt; 0.0:
            text = text[1:]

        self.display.setText(text)

    def backspaceClicked(self):
        if self.waitingForOperand:
            return

        text = self.display.text()[:-1]
        if not text:
            text = '0'
            self.waitingForOperand = True

        self.display.setText(text)

    def clear(self):
        if self.waitingForOperand:
            return

        self.display.setText('0')
        self.waitingForOperand = True

    def clearAll(self):
        self.sumSoFar = 0.0
        self.factorSoFar = 0.0
        self.pendingAdditiveOperator = ''
        self.pendingMultiplicativeOperator = ''
        self.display.setText('0')
        self.waitingForOperand = True

    def clearMemory(self):
        self.sumInMemory = 0.0

    def readMemory(self):
        self.display.setText(str(self.sumInMemory))
        self.waitingForOperand = True

    def setMemory(self):
        self.equalClicked()
        self.sumInMemory = float(self.display.text())

    def addToMemory(self):
        self.equalClicked()
        self.sumInMemory += float(self.display.text())

    def createButton(self, text, member):
        button = Button(text)
        button.clicked.connect(member)
        return button

    def abortOperation(self):
        self.clearAll()
        self.display.setText("####")

    def calculate(self, rightOperand, pendingOperator):
        if pendingOperator == "+":
            self.sumSoFar += rightOperand
        elif pendingOperator == "-":
            self.sumSoFar -= rightOperand
        elif pendingOperator == u"\N{MULTIPLICATION SIGN}":
            self.factorSoFar *= rightOperand
        elif pendingOperator == u"\N{DIVISION SIGN}":
            if rightOperand == 0.0:
                return False

            self.factorSoFar /= rightOperand

        return True


if __name__ == '__main__':

    import sys

    app = QApplication(sys.argv)
    calc = Calculator()
    calc.show()
    sys.exit(app.exec_())

&lt;/pre&gt;</content><category term="2017fall"></category><category term="CP"></category><category term="W5"></category></entry><entry><title>網際 Brython 3.3.4 程式執行環境</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/4062-brython-editor-334.html" rel="alternate"></link><published>2017-10-03T11:00:00+08:00</published><updated>2017-10-03T11:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-10-03:/40623201/doc/trunk/blog/4062-brython-editor-334.html</id><summary type="html">&lt;p&gt;Brython 程式環境可以用來練習許多 Python3 的簡單語法, 也可以納入 Javascript 程式庫, 利用 Ajax 模式結合網際瀏覽器與伺服器上的資源解決協同產品設計流程上的問題.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Brython 程式環境可以用來練習許多 Python3 的簡單語法, 也可以納入 Javascript 程式庫, 利用 Ajax 模式結合網際瀏覽器與伺服器上的資源解決協同產品設計流程上的問題.&lt;/p&gt;


&lt;!-- 導入 FileSaver 與 filereader --&gt;

&lt;script type="text/javascript" src="./../ace/FileSaver.min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../ace/filereader.js"&gt;&lt;/script&gt;

&lt;!-- 導入最新版的 Brython 標準程式庫 3.3.4 --&gt;

&lt;script type="text/javascript" src="./../data/Brython-3.3.4/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython 時, 設定 pythonpath 為 data/py, 並將 script1.py 放入, 以便取代 3.2.9 之前版本的 script id 導入 --&gt;

&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下執行 Brython 程式 --&gt;

&lt;h3&gt;利用以下的編輯器執行 Python3 程式&lt;/h3&gt;
&lt;p&gt;在 Firefox 中, 以 Preferences - General - Downloads 選擇 "Always ask me where to save files"&lt;/p&gt;
&lt;p&gt;在 Chrome 中, 以 Settings - Advanced - Downloads 選擇 Ask where to save each file before downloading&lt;/p&gt;
&lt;script src="./../ace/ace.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;script src="./../ace/ext-language_tools.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;script src="./../ace/mode-python3.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;script src="./../ace/snippets/python.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;

&lt;script type="text/javascript"&gt;
function doSave(){
    var blob = new Blob([localStorage["py_src"]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById('filename').value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;

&lt;!-- 請注意 Brython 3.3.0 之後的版本, 已經不能使用 script id 模式導入, 改用 pythonpath 中的 script1.py 供後續導入 --&gt;

&lt;script type="text/python3" id="script1"&gt;
import sys
import time
import traceback
import javascript

from browser import document as doc, window, alert

has_ace = True
try:
    editor = window.ace.edit("editor")
    session = editor.getSession()
    session.setMode("ace/mode/python")

    editor.setOptions({
     'enableLiveAutocompletion': True,
     'enableSnippets': True,
     'highlightActiveLine': False,
     'highlightSelectedWord': True
    })
except:
    from browser import html
    editor = html.TEXTAREA(rows=20, cols=70)
    doc["editor"] &lt;= editor
    def get_value(): return editor.value
    def set_value(x):editor.value = x
    editor.getValue = get_value
    editor.setValue = set_value
    has_ace = False

if hasattr(window, 'localStorage'):
    from browser.local_storage import storage
else:
    storage = None

def reset_src():
    if storage is not None and "py_src" in storage:
        editor.setValue(storage["py_src"])
    else:
        editor.setValue('for i in range(10):\n\tprint(i)')
    editor.scrollToRow(0)
    editor.gotoLine(0)

def reset_src_area():
    if storage and "py_src" in storage:
        editor.value = storage["py_src"]
    else:
        editor.value = 'for i in range(10):\n\tprint(i)'

class cOutput:

    def __init__(self,target):
        self.target = doc[target]
    def write(self,data):
        self.target.value += str(data)


#if "console" in doc:
sys.stdout = cOutput("console")
sys.stderr = cOutput("console")

def to_str(xx):
    return str(xx)

info = sys.implementation.version
doc['version'].text = 'Brython %s.%s.%s' % (info.major, info.minor, info.micro)

output = ''

def show_console(ev):
    doc["console"].value = output
    doc["console"].cols = 60
    doc["console"].rows = 10

# load a Python script
def load_script(evt):
    _name = evt.target.value + '?foo=%s' % time.time()
    editor.setValue(open(_name).read())

# run a script, in global namespace if in_globals is True
def run(*args):
    global output
    doc["console"].value = ''
    src = editor.getValue()
    if storage is not None:
       storage["py_src"] = src

    t0 = time.perf_counter()
    try:
        #ns = {'__name__':'__main__'}
        ns = {'__name__':'editor'}
        exec(src, ns)
        state = 1
    except Exception as exc:
        traceback.print_exc(file=sys.stderr)
        state = 0
    output = doc["console"].value

    print('&lt;completed in %6.2f ms&gt;' % ((time.perf_counter() - t0) * 1000.0))
    return state

if has_ace:
    reset_src()
else:
    reset_src_area()

def clear_console(ev):
    doc["console"].value = ""

def clear_container(ev):
    doc["container"].clear()

doc['run'].bind('click',run)
doc['show_console'].bind('click',show_console)
doc['clear_console'].bind('click',clear_console)
doc['clear_container'].bind('click',clear_container)

&lt;/script&gt;

&lt;div id="version"&gt;&lt;/div&gt;

&lt;div id="editor" style="width:600px;height:300px;"&gt;&lt;/div&gt;

&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;

&lt;form&gt;
    &lt;label&gt;Filename: &lt;input type="text" id="filename" placeholder="input file name"/&gt;.py&lt;/label&gt;
    &lt;input type="submit" value="Save" onclick="doSave();"/&gt;
&lt;/form&gt;

&lt;p&gt;&lt;button id="run"&gt;Run&lt;/button&gt;
&lt;button id="show_console"&gt;Output&lt;/button&gt;
&lt;button id="clear_console"&gt;清除&lt;/button&gt;
&lt;button id="clear_container"&gt;清除畫布&lt;/button&gt;
&lt;div style="width:100%;height:100%;"&gt;
&lt;textarea id="console" autocomplete="off"&gt;&lt;/textarea&gt;
&lt;/div&gt;
&lt;div id="common"&gt;&lt;/div&gt;
&lt;!-- container 主要提供網際繪圖用之畫布 --&gt;
&lt;div id="container"&gt;&lt;/div&gt;&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex1(ev):
    script1.editor.setValue('''#ex1 簡單的 for 迴圈範例
    for i in range(10):
        print(i)
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex1'].bind('click',ex1)
&lt;/script&gt;

&lt;p&gt;&lt;a id="ex1"&gt;ex1&lt;/a&gt;-for 迴圈&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex2(ev):
    script1.editor.setValue('''#溫度轉換程式
from browser import document as doc

# 因為此函式與滑鼠互動, 需要 event 當作輸入
def convTemp():
    mystring = ""
    cdegree = input("請輸入攝氏溫度:")
    fdegree = float(cdegree)*9/5 + 32
    output_string = "攝氏 " + str(cdegree) + "度=華氏 " + str(fdegree) + "度" 
    # 利用 print() 將轉換結果送到 console 區
    print(output_string)

#直接呼叫 convTemp() 執行
convTemp()
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex2'].bind('click',ex2)
&lt;/script&gt;

&lt;p&gt;&lt;a id="ex2"&gt;ex2&lt;/a&gt;-溫度換算&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex3(ev):
    script1.editor.setValue('''#jansen 多連桿機構驗算
from math import pi, cos, sin, sqrt, acos

radian = 180/pi
degree = pi/180

#PLAP
def plap(ax, ay, ac, bac, bx, by, ccw):
    if ccw == 1:
        cx= ac*cos(bac - acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ax 
        cy= ac*sin(bac - acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ay
    else:
        cx= ac*cos(bac + acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ax 
        cy= ac*sin(bac + acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ay
    return cx, cy

#PLLP
def pllp(ax, ay, ac, cb, bx, by, cw):
    if cw == 1:
        cx =  -((ay - by)*(-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 - sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx)) + (ac**2 - ax**2 - ay**2 + bx**2 + by**2 - cb**2)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))/(2*(ax - bx)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
        cy =  (-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(-ax + bx))/(2*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
    else:
        cx =  -((ay - by)*(-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx)) + (ac**2 - ax**2 - ay**2 + bx**2 + by**2 - cb**2)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))/(2*(ax - bx)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
        cy =  (-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx))/(2*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
    return cx, cy

ax = -38
ay = 0
# b 為原點
bx = 0
by = 0
cx = 0
cy = 7.8
# m 為配合 PLAP 新增固定點
mx = 30
my = 7.8
# dcm ccw 方向角度
dcm = 30*degree
cd = 15
# 三角形 dcm 為 ccw plap d=(a, cd, dcm, m)
dx, dy = plap(cx, cy, cd, dcm, mx, my, ccw=1)
print("dx=", dx, "dy=", dy)
# 三角形 aed 為 cw pllp e=(a, ae, ed, d)
ae = 41.5
ed = 50
ex, ey = pllp(ax, ay, ae, ed, dx, dy, cw=1)
print("ex=", ex, "ey=", ey)
# 三角形 afe 為 cw pllp f=(a, af, fe, e)
af = 40.1
fe = 55.8
fx, fy = pllp(ax, ay, af, fe, ex, ey, cw=1)
print("fx=", fx, "fy=", fy)
# 三角形 dha 為 cw pllp h=(d, dh, ha, a)
dh = 61.9
ha = 39.3
hx, hy = pllp(dx, dy, dh, ha, ax, ay, cw=1)
print("hx=", hx, "hy=", hy)
# 三角形 hgf 為 cw pllp g=(h, hg, gf, f)
hg = 36.7
gf = 39.4
gx, gy = pllp(hx, hy, hg, gf, fx, fy, cw=1)
print("gx=", gx, "gy=", gy)
# 三角形 hkg 為 cw pllp k=(h, hk, kg, g)
hk = 49
kg = 65.7
kx, ky = pllp(hx, hy, hk, kg, gx, gy, cw=1)
print("kx=", kx, "ky=", ky)
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex3'].bind('click',ex3)
&lt;/script&gt;

&lt;p&gt;&lt;a id="ex3"&gt;ex3&lt;/a&gt;-多連桿機構&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex4(ev):
    script1.editor.setValue('''#ex4 turtle 網際繪圖
import turtle
t=turtle.Turtle()

t.penup()
t.left(45)
t.backward(125)
t.right(45)
t.pendown()

for c in ['red', 'green', 'yellow', 'blue']:
    t.color(c)
    t.forward(75)
    t.left(90)

t1=turtle.Turtle("turtle")
t1.penup()

t1.pendown()
t1.width(3)
for c in ['red', 'blue', 'yellow', 'green', 'purple', 'brown']:
    t1.color(c)
    t1.forward(50)
    t1.left(60)

t1.penup()
t1.left(60)
t1.backward(120)

t1.pendown()
t1.color('red')
t1.write("I love Brython!!")

turtle._Screen().end()
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex4'].bind('click',ex4)
&lt;/script&gt;

&lt;p&gt;&lt;a id="ex4"&gt;ex4&lt;/a&gt;-turtle 網際繪圖&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_file(e):
    data = open("./../python_ex/for1.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)

document["get"].bind("click", get_file)
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_temp1(e):
    data = open("./../python_ex/temp1.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)

document["get_temp1"].bind("click", get_temp1)
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_ver_and_kw(e):
    data = open("./../python_ex/ver_and_kw.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)

document["get_ver_and_kw"].bind("click", get_ver_and_kw)
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def jansen(e):
    data = open("./../python_ex/jansen.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)

document["jansen"].bind("click", jansen)
&lt;/script&gt;

&lt;!-- python3 tutorial1-tutorial7 --&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def tutorial(e):
    # 利用 e.target.text 取的對應按鈕的字串, 可以開啟對應的程式檔案
    data = open("./../python_ex/python3_"+e.target.text+".py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)

document["tutorial1"].bind("click", tutorial)
document["tutorial2"].bind("click", tutorial)
document["tutorial3"].bind("click", tutorial)
document["tutorial4"].bind("click", tutorial)
document["tutorial5"].bind("click", tutorial)
document["tutorial6"].bind("click", tutorial)
document["tutorial7"].bind("click", tutorial)
&lt;/script&gt;

&lt;p&gt;&lt;button id="get"&gt;for1.py&lt;/button&gt;&lt;button id="get_temp1"&gt;temp1.py&lt;/button&gt;&lt;button id="get_ver_and_kw"&gt;ver_and_kw.py&lt;/button&gt;&lt;button id="jansen"&gt;jansen.py&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="tutorial1"&gt;tutorial1&lt;/button&gt;&lt;button id="tutorial2"&gt;tutorial2&lt;/button&gt;&lt;button id="tutorial3"&gt;tutorial3&lt;/button&gt;&lt;button id="tutorial4"&gt;tutorial4&lt;/button&gt;&lt;button id="tutorial5"&gt;tutorial5&lt;/button&gt;&lt;button id="tutorial6"&gt;tutorial6&lt;/button&gt;&lt;button id="tutorial7"&gt;tutorial7&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;Jansen 多連桿機構尺寸圖:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/jansen_sympy.png" width="800" /&gt;&lt;/p&gt;</content><category term="2017fall"></category><category term="cp"></category><category term="brython"></category><category term="w4"></category></entry><entry><title>計算機程式第四週學習心得</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/40623201-w.html" rel="alternate"></link><published>2017-10-02T01:00:00+08:00</published><updated>2017-10-02T01:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-10-02:/40623201/doc/trunk/blog/40623201-w.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;課堂筆記&lt;/h3&gt;
&lt;p&gt;fossil clone 克隆&lt;/p&gt;
&lt;p&gt;fossil open 開啟&lt;/p&gt;
&lt;p&gt;fossil add  新增&lt;/p&gt;
&lt;p&gt;fossil commit 提交 &lt;/p&gt;
&lt;p&gt;fossil push 推送&lt;/p&gt;
&lt;p&gt;fossil status 狀態&lt;/p&gt;
&lt;p&gt;fossil delete 刪除&lt;/p&gt;
&lt;p&gt;利用Leo.Editor 維護網誌&lt;/p&gt;
&lt;p&gt;利用Leo.Editor 維護投影片&lt;/p&gt;
&lt;p&gt;Part 1&lt;/p&gt;
&lt;p&gt;重複上週clone 4062的動作&lt;/p&gt;
&lt;p&gt;fossil open ./../../ 需用相對目錄去綁帳號,不能用絕對目錄去綁死,一旦綁死之後若前面的資料夾有重複就必須更改很多東西&lt;/p&gt;
&lt;p&gt;再開啟launchLeo.py再開啟4062&amp;gt;users&amp;gt;yen.leo&lt;/p&gt;
&lt;p&gt;更改Auhor:yen改為Auhor:40623201&lt;/p&gt;
&lt;p&gt;不能用全形字,如果發生問題要檢查文字是否有全形字在內&lt;/p&gt;
&lt;p&gt;再重複上週推近端及遠端之動作&lt;/p&gt;
&lt;p&gt;遠端是有討論版的,而近端沒有&lt;/p&gt;
&lt;p&gt;先fossil add .&lt;/p&gt;
&lt;p&gt;之後fossil status時,會發現剛剛更改的yen會被MISSING&lt;/p&gt;
&lt;p&gt;接著fossil delete 剛剛yen被MISSING的那行&lt;/p&gt;
&lt;p&gt;再fossil commit -m "  "提交上去後就能推遠端了&lt;/p&gt;
&lt;p&gt;Part 2&lt;/p&gt;
&lt;p&gt;.pyc的格式是二位元,因為Python 3是解譯的必須在執行時一行一行轉譯執行的程式,再推程式時必須忽略它(需手動的方式刪除)&lt;/p&gt;
&lt;p&gt;先mkdir fossil-settings 新建一個 fossil-settings(不能直接在資料夾新增,因為不是一般的資料夾格式,就必須用程式mkdir的方式去建立)&lt;/p&gt;
&lt;p&gt;再將ignore-glob的檔案 複製 &lt;em&gt;/.git/&lt;/em&gt;,&lt;em&gt;/&lt;strong&gt;pycache&lt;/strong&gt;/&lt;/em&gt;,&lt;em&gt;/&lt;/em&gt;.pyc(意思是凡是在__pycache__的資料夾內以及.pyc檔和.git都不要)&lt;/p&gt;
&lt;p&gt;之後下fossil delete &lt;strong&gt;pycache&lt;/strong&gt;/* 刪除掉__pycache__的資料夾&lt;/p&gt;
&lt;p&gt;再fossil add .&amp;gt;fossil commit -m "  "提交上去就能版本同步了&lt;/p&gt;
&lt;h3&gt;學習心得&lt;/h3&gt;
&lt;p&gt;本周學習到如何維護網誌及更改版本讓版本同步,有許多部分(例如:全形字,手動刪除 等)需要特別注意不然就會容易發生錯誤&lt;/p&gt;</content><category term="2017fall"></category><category term="CP"></category><category term="w4"></category></entry><entry><title>計算機程式第三週學習心得</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/40623201-w3.html" rel="alternate"></link><published>2017-09-25T01:00:00+08:00</published><updated>2017-09-25T01:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-09-25:/40623201/doc/trunk/blog/40623201-w3.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;課堂筆記&lt;/h3&gt;
&lt;p&gt;Part 1&lt;/p&gt;
&lt;p&gt;先fossil clone https://4062@cpb.kmol.info/4062 4062.fossil&lt;/p&gt;
&lt;p&gt;然後fossil open(/../../ 兩個小點代表回上一層資料夾)&lt;/p&gt;
&lt;p&gt;再複製上周clone的4052(_pycache_跟_FOSSIL_不能複製到不然版次會亂掉)&lt;/p&gt;
&lt;p&gt;接著fossil add .新增在版次系統內&lt;/p&gt;
&lt;p&gt;再fossil commit -m "   "(提交要綁定訊息,"  "內所打的東西會再Timeline上看到)&lt;/p&gt;
&lt;p&gt;之後再輸入密碼就能將東西推上遠端&lt;/p&gt;
&lt;p&gt;Part 2&lt;/p&gt;
&lt;p&gt;近端能在沒有網路的情況下觀看,運用fossil ui 4062.fossil能觀看近端&lt;/p&gt;
&lt;p&gt;如何更改近端及遠端:&lt;/p&gt;
&lt;p&gt;先打開launchLeo.py再開啟4062&amp;gt;users&amp;gt;yen.leo&lt;/p&gt;
&lt;p&gt;開啟後接著在@button pelican-blog按下pelican-blog(近端按鈕)&amp;gt;Goto Script&lt;/p&gt;
&lt;p&gt;近端完成後接著在遠端的@edit publishconf.py更改網址(需更改主機及學號)後&lt;/p&gt;
&lt;p&gt;File&amp;gt;Save(儲存)後再按github-biog(遠端按鈕)&amp;gt;Goto Script&lt;/p&gt;
&lt;p&gt;再推送上去(重複上面新增版次級提交的動作)&lt;/p&gt;
&lt;h3&gt;學習心得&lt;/h3&gt;
&lt;p&gt;本周學習到如何clone別人的倉儲來新增並推送上去自己的倉儲,也了解到近端及遠端的差異性&lt;/p&gt;</content><category term="2017fall"></category><category term="CP"></category><category term="w3"></category></entry><entry><title>計算機程式第二週學習心得</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/2017-fall-cp-w2.html" rel="alternate"></link><published>2017-09-18T11:00:00+08:00</published><updated>2017-09-18T11:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-09-18:/40623201/doc/trunk/blog/2017-fall-cp-w2.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;課堂筆記&lt;/h3&gt;
&lt;p&gt;sofware 軟體&lt;/p&gt;
&lt;p&gt;configuration 組成內容與狀態&lt;/p&gt;
&lt;p&gt;SCM - Software Configuration Management 軟體配置管理:又稱軟體組態管理,對軟體的每個項目變更時進行管控,維護不同項目之間的版本關聯,使軟體在開發過程中任一時間的內容都可以被追溯&lt;/p&gt;
&lt;p&gt;batch 批次&lt;/p&gt;
&lt;p&gt;remark 註解&lt;/p&gt;
&lt;p&gt;default 內定, 默認&lt;/p&gt;
&lt;p&gt;fossil clone 克隆&lt;/p&gt;
&lt;p&gt;fossil add  新增&lt;/p&gt;
&lt;p&gt;fossil commit 提交 &lt;/p&gt;
&lt;p&gt;fossil commit - m "訊息 "&lt;/p&gt;
&lt;p&gt;fossil status 狀態&lt;/p&gt;
&lt;p&gt;fossil push 推送&lt;/p&gt;
&lt;p&gt;fossil open 開啟&lt;/p&gt;
&lt;p&gt;fossil remote-url off 網址關閉&lt;/p&gt;
&lt;p&gt;fossil ui - user interface 使用者介面&lt;/p&gt;
&lt;p&gt;remote 遠端&lt;/p&gt;
&lt;p&gt;URL - Uniform Resource Locator 統一資源定位器:俗稱網頁位址(網址)&lt;/p&gt;
&lt;p&gt;HTTPS - Hypertext Transfer Protocol Secure 安全超文本傳輸協議:是一種透過計算機網路進行安全通訊的傳輸協議&lt;/p&gt;
&lt;p&gt;protocol 協定&lt;/p&gt;
&lt;p&gt;certification 簽章 - public key server&lt;/p&gt;
&lt;p&gt;certify 認證&lt;/p&gt;
&lt;p&gt;vacuum 吸塵(把不要的東西清除)&lt;/p&gt;
&lt;p&gt;fossil clone https://mde1a1.kmol.info/pymcadp pymcadp.fossil&lt;/p&gt;
&lt;p&gt;IDE - Integrated Development Environment 整合開發環境:是一種輔助程式開發人員開發軟體的應用軟體,在開發工具內部可以輔助編寫原始碼並編譯打包成為可用的程式&lt;/p&gt;
&lt;h3&gt;登入帳號:&lt;/h3&gt;
&lt;p&gt;mde.tw&amp;gt;2017fall&amp;gt;cp倉儲一乙&amp;gt;40623201&amp;gt;login&lt;/p&gt;
&lt;h3&gt;修改密碼:&lt;/h3&gt;
&lt;p&gt;Admin&amp;gt;user&amp;gt;40623201&amp;gt;修改密碼passward&amp;gt;Apply changes&lt;/p&gt;
&lt;h3&gt;更改時間軸(Timeline):&lt;/h3&gt;
&lt;p&gt;Admin&amp;gt;Timeline&amp;gt;Use Universal Coordinated Time&amp;gt;把打勾取消&lt;/p&gt;
&lt;h3&gt;建立Wiki:&lt;/h3&gt;
&lt;p&gt;Wiki&amp;gt;New&amp;gt;Name of new wiki page:輸入名稱&amp;gt;Create&lt;/p&gt;
&lt;h3&gt;學習心得:&lt;/h3&gt;
&lt;p&gt;這周開始接觸到許多fossil的指令,有許多東西是之前沒看過的,也對建立倉儲有初步的概念了&lt;/p&gt;</content><category term="2017fall"></category><category term="CP"></category></entry><entry><title>計算機程式第一週學習心得</title><link href="https://cpb.kmol.info/40623201/doc/trunk/blog/40623201-w1.html" rel="alternate"></link><published>2017-09-11T01:00:00+08:00</published><updated>2017-09-11T01:00:00+08:00</updated><author><name>40623201</name></author><id>tag:cpb.kmol.info,2017-09-11:/40623201/doc/trunk/blog/40623201-w1.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;課堂筆記&lt;/h3&gt;
&lt;p&gt;機械設計:表達內容由固體,液體,軟體組成&lt;/p&gt;
&lt;p&gt;六種表達:&lt;/p&gt;
&lt;p&gt;(1)口語&lt;/p&gt;
&lt;p&gt;(2)文字&lt;/p&gt;
&lt;p&gt;(3)圖表(2D)-不會動&lt;/p&gt;
&lt;p&gt;(4)3D-會動&lt;/p&gt;
&lt;p&gt;(5)量化&lt;/p&gt;
&lt;p&gt;(6)實體&lt;/p&gt;
&lt;p&gt;創造力:&lt;/p&gt;
&lt;p&gt;(1)自學力(好好學)&lt;/p&gt;
&lt;p&gt;(2)執行力(好好做)&lt;/p&gt;
&lt;p&gt;(3)想像力(達不到的運用想像力)&lt;/p&gt;
&lt;p&gt;程式:&lt;/p&gt;
&lt;p&gt;程-流程&lt;/p&gt;
&lt;p&gt;式-一定的格式&lt;/p&gt;
&lt;p&gt;Ctrl+A 全選&lt;/p&gt;
&lt;p&gt;Ctrl+C 複製&lt;/p&gt;
&lt;p&gt;Ctrl+E 放大&lt;/p&gt;
&lt;p&gt;Ctrl+V 貼上&lt;/p&gt;
&lt;p&gt;interpret 解譯:是一種能將高階程式語言一行一行直接轉譯執行的程式&lt;/p&gt;
&lt;p&gt;compiler 編譯:是一種將某種程式語言寫成的原始碼轉換成另一種程式語言的程式
(執行程式速度:編譯&amp;gt;解譯)&lt;/p&gt;
&lt;h3&gt;學習心得&lt;/h3&gt;
&lt;p&gt;重新認識機械設計的定義以及學習到了六種設計者的表達方式,也了解到創造力對設計者來說不能只是空想,必須要有自學力去學習及執行力去做出來,更要有想像力去想像無法運用身邊資源所做出來的東西,必須具備這些條件才能出創造東西&lt;/p&gt;</content><category term="2017fall"></category><category term="CP"></category><category term="w1"></category></entry></feed>